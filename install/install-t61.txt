# 1 > partitioning
# 1.1 > esp
mkfs.ext4 /dev/sda1 -L arch-boot

# 1.2 > luks
cryptsetup \
 --type      luks2           \
 --cipher    aes-xts-plain64 \
 --hash      sha512          \
 --iter-time 2000            \
 --key-size  512             \
 --pbkdf     argon2id        \
\
 --use-urandom               \
 --verify-passphrase         \
\
 luksFormat /dev/sda2

cryptsetup \
 --allow-discards \
 --persistent     \
 luksOpen /dev/sda2 arch

# 1.3 > lvm
pvcreate /dev/mapper/arch
vgcreate arch /dev/mapper/arch
lvcreate --size 10G   arch --name rootfs
lvcreate -l +100%FREE arch --name stuff

mkfs.ext4 /dev/arch/rootfs -L arch-rootfs
mkfs.ext4 /dev/arch/stuff  -L arch-stuff

# 1.4 > mounts
mount /dev/arch/rootfs /mnt

mkdir /mnt/boot
mount /dev/sda1 /mnt/boot

mkdir /stuff
mount /dev/arch/stuff /stuff

# 2 > action
# 2.1 > lay base
cat << EOF >> /etc/pacman.conf
[multilib]
Include = /etc/pacman.d/mirrorlist
EOF

pacman -Sy

pacstrap -K /mnt \
 `cat /stuff/techy-bits/git/mss-otg/install/pkglist/main/{base,t61}.txt`

arch-chroot /mnt

# 2.2 > chroot
# 2.2.1 > set repo
mkdir -pv \
 /mnt/mss/{archive,externalstuff,iso,usb,stuff}

mount /dev/arch/stuff /mnt/mss/stuff

repodir="/mnt/mss/stuff/techy-bits/git/mss-otg"
cd "${repodir}"/utils

mkdir build
cd    build

meson setup ..; samu; samu install

ln -sfv /mnt/mss/stuff/techy-bits/git/mss-otg /mss/repo
ln -sfv /mnt/mss/stuff/techy-bits/work        /mss/work

chown -Rh root:root /mss

ln -sfv /mss/share/bash-handler /etc/profile
ln -sfv /mss/share/bash-handler /etc/bash.bashrc

cd ../; rm -rf build

exit

# 2.2.2 > landfill
arch-chroot /mnt

repodir="/mnt/mss/stuff/techy-bits/git/mss-otg"
cd "${repodir}"/landfill

mkdir build
cd    build

meson setup ..; samu; sudo samu install

cd ../; rm -rf build/; cd

# 2.2.1 > configure /etc
fdir="${repodir}/dir"

echo "nameserver 192.168.1.1" > /etc/resolv.conf
echo "ashtray"                > /etc/hostname

cat << EOF > /etc/hosts
127.0.0.1    localhost
127.0.1.1    ashtray ashtray

192.168.1.29 gat
192.168.1.30 solitude
192.168.1.31 ashtray
EOF

cp -vf \
 "${fdir}"/etc/fstab            \
 "${fdir}"/etc/locale.conf      \
 "${fdir}"/etc/locale.gen       \
 "${fdir}"/etc/makepkg.conf     \
 "${fdir}"/etc/mkinitcpio.conf  \
 "${fdir}"/etc/mpd.conf         \
 "${fdir}"/etc/named.conf       \
 "${fdir}"/etc/ntp.conf         \
 "${fdir}"/etc/pacman.conf      \
 "${fdir}"/etc/proxychains.conf \
 "${fdir}"/etc/vconsole.conf    \
 "${fdir}"/etc/vimrc            \
 /etc/

cat << EOF >> /etc/fstab
/dev/sda1 /boot ext4 defaults 0 0
EOF

cat /etc/fstab | column -t > /tmp/fstab; mv /tmp/fstab /etc/fstab

cat << EOF > /etc/ssh/banner

 ╔────────────────────────╗
 │ ashtray (192.168.1.31) │
 ╚────────────────────────╝

EOF

cp -vfr "${fdir}"/etc/X11/Xwrapper.config     /etc/X11/
cp -vfr "${fdir}"/etc/acpi/handler.sh         /etc/acpi/
cp -vfr "${fdir}"/etc/pulse/*                 /etc/pulse/
cp -vfr "${fdir}"/etc/ssh/sshd_config         /etc/ssh/
cp -vfr "${fdir}"/etc/sudoers.d/*             /etc/sudoers.d/
cp -vfr "${fdir}"/etc/sysctl.d/*              /etc/sysctl.d/
cp -vfr "${fdir}"/etc/systemd/logind.conf     /etc/systemd/
cp -vfr "${fdir}"/etc/systemd/system/*        /etc/systemd/system/
cp -vfr "${fdir}"/etc/udev/rules.d/*          /etc/udev/rules.d/
cp -vfr "${fdir}"/usr/share/dbus-1/system.d/* /usr/share/dbus-1/system.d

cp -vfr "${fdir}"/etc/X11/xorg.conf.d/01-intel-thinkpad.conf \
 /etc/X11/xorg.conf.d/

groupadd -r pulse
groupadd -r pulse-access
useradd -r -g pulse -G audio -d /var/run/pulse -m pulse
rm -rfv /var/run/pulse/.bash*

for i in /etc/pulse/*.pa; do
 awk -i inplace \
  '{gsub(/load-module module-native-protocol-unix/,\
         "load-module module-native-protocol-unix\
 auth-anonymous=1 socket=/var/run/pulse/native");\
          print}' \
          "${i}"
done

sed -i -e '/module-suspend-on-idle/d' \
 /etc/pulse/default.pa \
 /etc/pulse/system.pa

systemctl --global disable pulseaudio.service pulseaudio.socket

sed -i -e 's|kernel.sysrq = 16|kernel.sysrq = 1|g' \
 /usr/lib/sysctl.d/50-default.conf

ln -sfv /usr/share/zoneinfo/Europe/Istanbul /etc/localtime

# 2.2.1 > configure bind
pushd /var/named
 curl -L -O ftp://72.13.38.33/domain/named.root
 chown named:named *
popd

> /var/log/named.log
chown named:named /var/log/named.log

cp -vf "${fdir}"/etc/NetworkManager/conf.d/dns-servers.conf \
 /etc/NetworkManager/conf.d/

# 2.2.2 > vim
ln -sfv /usr/bin/vim /usr/bin/vi
mkdir -pv ~/.config/vim/{backups,swaps}

# 2.2.3 > arch init
locale-gen

pacman-key --init
pacman-key --populate archlinux

# 2.2.4 > users
groupadd -g 1001 mss

useradd \
 -c mss       \
 -d /home/mss \
 -m           \
 -g 1001      \
 -u 1001      \
 -G adbusers,adm,audio,disk,floppy,ftp,games,http,input,kmem,kvm,log,lp,mail,\
optical,proc,pulse-access,rfkill,scanner,smmsp,storage,sys,systemd-journal,tty,\
users,utmp,uucp,video,wheel,wireshark \
 mss

passwd
passwd mss

pwconv
grpconv

rm -rfv /home/mss/.*
mount /home/mss

visudo

# 2.2.5 > nftables
nft flush ruleset
nft add table inet myfilter
nft add table ip mynat

nft 'create chain inet myfilter input {    \
 type filter hook input priority filter;   \
 policy drop;                              \
}'

nft 'create chain inet myfilter forward {  \
 type filter hook forward priority filter; \
 policy accept;                            \
}'

nft 'create chain inet myfilter output {   \
 type filter hook output priority filter;  \
 policy accept;                            \
}'

nft 'create chain ip mynat output {        \
 type nat hook output priority -100;       \
 policy accept;                            \
}'

nft 'create chain ip mynat prerouting {    \
 type nat hook prerouting priority -100;   \
 policy accept;                            \
}'

nft 'add rule inet myfilter input ct state established,related accept'
nft 'add rule inet myfilter input ct state invalid drop'
nft 'add rule inet myfilter input iifname "lo" accept'
nft 'add rule inet myfilter input iifname != "lo" ip daddr 127.0.0.0/8 drop'
nft 'add rule inet myfilter input icmp type echo-request accept'

nft 'add rule inet myfilter input \
 tcp dport {443,53,80,1337,1338,1935,3131,8000,9091} accept'

nft 'add rule inet myfilter input \
 udp dport {53,67,68} accept'

nft 'add rule ip mynat output     oifname != "virbr0" \
 ip daddr 127.0.0.1 tcp dport 80 redirect to :1337'
nft 'add rule ip mynat output     oifname != "virbr0" \
 ip daddr 127.0.0.1 tcp dport 443 redirect to :1338'

nft 'add rule ip mynat prerouting iifname != "virbr0" \
 tcp dport 80 redirect to :1337'
nft 'add rule ip mynat prerouting iifname != "virbr0" \
 tcp dport 443 redirect to :1338'

printf '%s\n\n' 'flush ruleset' > /etc/nftables.conf
nft -s list ruleset >> /etc/nftables.conf

# 2.2.5.1 > nfqws
git clone --depth=1 https://github.com/bol-van/zapret
cd  zapret/nfq/

make clean

for i in *.c crypto/*.c; do clang ${CFLAGS} -std=gnu99 -c "${i}"; done

clang ${LDFLAGS} -std=gnu99 *.o -o nfqws \
 -lz -lcap -lmnl -lnetfilter_queue -lnfnetlink

for i in nfqws; do
 strip --strip-all "${i}"
 chown root:root "${i}"
 mv "${i}" /usr/bin/
done

cd ../../; rm -rf zapret/

# 2.2.6 > services
systemctl enable NetworkManager
systemctl enable acpid
systemctl enable gpm
systemctl enable nftables
systemctl enable named
#systemctl enable nfqws
systemctl enable ntpd
systemctl enable pulseaudio
systemctl enable sshd
systemctl enable tor
systemctl enable transmission

systemctl mask mpd.socket
systemctl enable mpd.service

systemctl mask iptables

# 2.2.7 > bootloader
mkinitcpio -P

swapuuid="$(blkid `mount | awk '/\/mnt\/mss\/stuff/{print $1}'` \
            | awk '{gsub(/"/,""); print $3}')"
swapoffs="$(filefrag -v "/mnt/mss/stuff/techy-bits/swapfile" \
            | awk '$1=="0:" {print substr($4, 1, length($4)-2)}')"

cmdline="cryptdevice=/dev/sda2:cryptlvm root=/dev/arch/rootfs"
cmdline="${cmdline} rw mitigations=off"
cmdline="${cmdline} preempt=full"
cmdline="${cmdline} processor.ignore_ppc=1 intel_pstate=disable"
cmdline="${cmdline} cpufreq.default_governor=schedutil"
cmdline="${cmdline} thinkpad_acpi.fan_control=1"
cmdline="${cmdline} resume=${swapuuid} resume_offset=${swapoffs}"

cat /mss/repo/dir/etc/default/grub \
 | sed "s|REPLACEMECMDLINE|${cmdline}|g" \
    > /etc/default/grub

grub-install --target=i386-pc /dev/sda
grub-mkconfig -o /boot/grub/grub.cfg

exit
reboot

# 3 > user
# 3.1 > yay
git clone --depth=1 https://aur.archlinux.org/yay.git
cd  yay/

makepkg -sri

cd ../; rm -rf yay/

yay -Syu --noconfirm \
 `cat /mss/repo/install/pkglist/user/{base,t61}.txt`

# 3.2 > thinkfan
sudo -i
tempfiles="$(/bin/ls -w1 /sys/class/hwmon/hwmon*/temp*_label)"
fintemp="$(grep -l Package    ${tempfiles} \
           || grep -l Core\ 0 ${tempfiles} \
           || grep -l Tctl    ${tempfiles} )"

hwmonfile="$(echo "${fintemp}" | sed 's/label/input/g')"

sed -e "s|REPLACEMEHWMON|${hwmonfile}|g" \
 /mss/repo/dir/etc/thinkfan.conf > /etc/thinkfan.conf

systemctl enable thinkfan

# 3.3 > cleanup
pacman -Qtdq | pacman -Rns - --noconfirm
pacman -Scc --noconfirm

reboot
