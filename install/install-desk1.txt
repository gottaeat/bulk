# vim: set ft=sh:

# 1 > partitioning
# 1.1 > esp
mkfs.fat -F 32 /dev/sda1 -n EFI -v

# 1.2 > luks
cryptsetup \
    --type luks2             \
    --cipher aes-xts-plain64 \
    --hash sha512            \
    --iter-time 2000         \
    --key-size 512           \
    --pbkdf argon2id         \
    --use-urandom            \
    --verify-passphrase      \
\
    luksFormat /dev/sda2

cryptsetup \
    --allow-discards \
    --persistent     \
\
    luksOpen /dev/sda2 arch

# 1.3 > lvm
pvcreate /dev/mapper/arch
vgcreate arch /dev/mapper/arch

lvcreate --size 25G arch --name rootfs
lvcreate -l +100%FREE arch --name stuff

mkfs.ext4 /dev/arch/rootfs -L arch-rootfs
mkfs.ext4 /dev/arch/stuff  -L arch-stuff

# 1.4 > mounts
mount /dev/arch/rootfs /mnt

mkdir /mnt/boot
mount /dev/sda1 /mnt/boot

mkdir /stuff
mount /dev/arch/stuff /stuff

# 2 > bootstrap
pacman -Sy pacman-contrib

curl -s \
"https://archlinux.org/mirrorlist/?ip_version=4&protocol=https&use_mirror_status=on\
&country=FR&country=DE" \
    | sed -e 's/^#Server/Server/' -e '/^#/d' \
    | rankmirrors - > /etc/pacman.d/mirrorlist 

cat << EOF >> /etc/pacman.conf
[multilib]
Include = /etc/pacman.d/mirrorlist
EOF

pacman -Sy

pacstrap \
    -K /mnt \
    `cat /stuff/techy-bits/git/mss-otg/install/pkglist/main/{base,desk1}.txt`

cp -vfr \
    /etc/pacman.d/mirrorlist \
    /mnt/etc/pacman.d/mirrorlist

# 3 > otg
arch-chroot /mnt

mkdir -pv /mnt/mss/{archive,externalstuff,iso,usb,stuff}

mount /dev/arch/stuff /mnt/mss/stuff

repodir="/mnt/mss/stuff/techy-bits/git/mss-otg"
cd "${repodir}"/utils

mkdir build/
cd build/

meson setup ../; samu; samu install

ln -sfv /mnt/mss/stuff/techy-bits/git/mss-otg /mss/repo
ln -sfv /mnt/mss/stuff/techy-bits/work /mss/work

chown -Rh root:root /mss

ln -sfv /mss/share/bash-handler /etc/profile
ln -sfv /mss/share/bash-handler /etc/bash.bashrc

cd ../; rm -rf build/

exit

# 4 > landfill
arch-chroot /mnt

repodir="/mnt/mss/stuff/techy-bits/git/mss-otg"
cd "${repodir}"/landfill

mkdir build/
cd build/

meson setup ../; samu; samu install

cd ../; rm -rf build/; cd

# 5 > base /etc
fdir="${repodir}/dir"

# 5.1 > fstab
cp -vfr "${fdir}"/etc/fstab /etc

echo "/dev/sda1 /boot vfat defaults 0 0" >> /etc/fstab

# 5.2 > resolv
if mountpoint /etc/resolv.conf >/dev/null 2>&1; then umount /etc/resolv.conf; fi
rm -rfv /etc/resolv.conf

echo "nameserver 10.13.37.1" > /etc/resolv.conf

# 5.3 > locale + tz
cp -vfr \
    "${fdir}"/etc/locale.conf \
    "${fdir}"/etc/locale.gen  \
    /etc/

locale-gen

ln -sfv /usr/share/zoneinfo/Europe/Istanbul /etc/localtime

# 5.4 > host
echo "gat" > /etc/hostname

cat << EOF > /etc/hosts
127.0.0.1 localhost
127.0.1.1 gat gat
EOF

# 5.5 > vim
cp -rfv "${fdir}"/etc/vimrc /etc

ln -sfv /usr/bin/vim /usr/bin/vi
mkdir -pv ~/.config/vim/{backups,swaps}

# 5.6 > sudo
cp -vfr "${fdir}"/etc/sudoers.d/*  /etc/sudoers.d/

# 5.7 > udev + util-linux
cp -vfr "${fdir}"/etc/modprobe.d/*   /etc/modprobe.d/
cp -vfr "${fdir}"/etc/sysctl.d/*     /etc/sysctl.d/
cp -vfr "${fdir}"/etc/udev/rules.d/* /etc/udev/rules.d/

sed -i -e \
    's|kernel.sysrq = 16|kernel.sysrq = 1|g' \
    /usr/lib/sysctl.d/50-default.conf

# 5.8 > arch
cp -vfr \
    "${fdir}"/etc/pacman.conf     \
    "${fdir}"/etc/makepkg.conf    \
    "${fdir}"/etc/mkinitcpio.conf \
    /etc

pacman-key --init
pacman-key --populate archlinux

# 5.9 > systemd
cp -vfr "${fdir}"/etc/systemd/logind.conf /etc/systemd/
cp -vfr "${fdir}"/etc/systemd/system/*    /etc/systemd/system/
cp -vfr "${fdir}"/etc/vconsole.conf       /etc/

# 5.9.1 > systemd-networkd
cp -vfr \
    "${fdir}"/etc/systemd/network/lo.network \
    /etc/systemd/network

systemctl enable systemd-networkd

# 5.10 > networkmanager
cp -vfr \
    "${fdir}"/etc/NetworkManager/conf.d/dns.conf      \
    "${fdir}"/etc/NetworkManager/conf.d/rand_mac.conf \
    /etc/NetworkManager/conf.d/

systemctl enable NetworkManager

# 5.11 > nftables
cp -vfr "${repodir}"/nftables/desk1.nft /etc/nftables.conf

systemctl mask iptables
systemctl enable nftables

# 5.12 > wireguard
ln -sfv \
    /mnt/mss/stuff/techy-bits/vpn/lichen/client/gat-lichen.conf \
    /etc/wireguard/lichen.conf

# 5.13 > sshd
cp -vfr "${fdir}"/etc/ssh/sshd_config /etc/ssh/
cp -vfr /mnt/mss/stuff/techy-bits/banners/gat /etc/ssh/banner

systemctl enable sshd

# 5.14 > named
rm -rf /var/named

cp -vfr "${fdir}"/etc/named.conf /etc
cp -vfr "${fdir}"/var/named/ /var

for i in /etc/named.conf /var/named; do
    chown -Rh named:named "${i}"
    chmod 0700 "${i}"
done

rndc_conf="$(rndc-confgen)"

echo "${rndc_conf}" | grep -v ^\# > /etc/rndc.conf

printf "\n%s\n%s\n" \
    "// rndc" \
    "$(echo "${rndc_conf}" | grep \# | grep -v ^\#\ [A-Z] \
        | sed 's/^# //g;s/allow\ {\ 127\.0\.0\.1/allow { \"loopback\"/g;')" \
    >> /etc/named.conf

unset rndc_conf

systemctl enable named

# 5.15 > docker
sed -i -e 's/LimitNOFILE=infinity/LimitNOFILE=1024:524288/g' \
    /usr/lib/systemd/system/{containerd,docker}.service

systemctl enable dockerns.service docker

# 5.16 > pulseaudio
cp -vfr "${fdir}"/usr/share/dbus-1/system.d/* /usr/share/dbus-1/system.d/
cp -vfr "${fdir}"/etc/pulse/*                 /etc/pulse/

groupadd -r pulse
groupadd -r pulse-access
useradd -r -g pulse -G audio -d /var/run/pulse -m pulse
rm -rfv /var/run/pulse/.bash*

for i in /etc/pulse/*.pa; do
    awk -i inplace '{gsub(/load-module module-native-protocol-unix/,\
"load-module module-native-protocol-unix \
auth-anonymous=1 socket=/var/run/pulse/native");\
    print}' "${i}"
done

sed -i -e \
    '/module-suspend-on-idle/d' \
    /etc/pulse/default.pa       \
    /etc/pulse/system.pa

systemctl --global disable pulseaudio.service pulseaudio.socket
systemctl enable pulseaudio

# 5.17 > mpd
cp -vfr "${fdir}"/etc/mpd.conf /etc
systemctl mask mpd.socket
systemctl enable mpd.service

# 5.18 > x11
cp -vfr "${fdir}"/etc/X11/Xwrapper.config           /etc/X11/
cp -vfr "${fdir}"/etc/X11/xorg.conf.d/01-desk1.conf /etc/X11/xorg.conf.d/

# 5.19 > misc services
cp -vfr \ 
    "${fdir}"/etc/ntp.conf         \
    "${fdir}"/etc/proxychains.conf \
    /etc

systemctl enable gpm
systemctl enable libvirtdns.service libvirtd.service virtlogd.service
systemctl enable linux-modules-cleanup
systemctl enable ntpd
systemctl enable qbittorrent-nox@mss.service
systemctl enable tor
systemctl enable vnstat

# 6 > nfqws
cd /mnt/mss/stuff/techy-bits/git/mss-nfqws/

mkdir build
cd    build

meson setup -Dopenwrt=false ../

samu
samu install

cd ../; rm -rf build/; cd

# 7 > users
groupadd -g 1001 mss

useradd \
 -c mss       \
 -d /home/mss \
 -m           \
 -g 1001      \
 -u 1001      \
 -G adbusers,adm,audio,disk,docker,floppy,ftp,games,http,input,kmem,kvm,\
libvirt,log,lp,mail,mss,optical,proc,pulse-access,rfkill,scanner,smmsp,storage,\
sys,systemd-journal,tty,users,utmp,uucp,video,wheel,wireshark \
 mss

passwd
passwd mss

pwconv
grpconv

rm -rfv /home/mss/.*
mount /home/mss

visudo

# 8 > switch to local bind
cat << EOF > /etc/resolv.conf
search crib lichen lichenraw
nameserver 10.0.99.0
EOF

# 9 > bootloader
mkinitcpio -P

swapuuid="$(blkid `mount | awk '/\/mnt\/mss\/stuff/{print $1}'` \
    | awk '{gsub(/"/,""); print $3}')"
swapoffs="$(filefrag -v "/mnt/mss/stuff/techy-bits/swapfile" \
    | awk '$1=="0:" {print substr($4, 1, length($4)-2)}')"

cmdline="initrd=\amd-ucode.img initrd=\initramfs-linux-zen.img"
cmdline="${cmdline} cryptdevice=/dev/sda2:cryptlvm root=/dev/arch/rootfs"
cmdline="${cmdline} rw mitigations=off"
cmdline="${cmdline} net.ifnames=0"
cmdline="${cmdline} ipv6.disable=1"
cmdline="${cmdline} preempt=full"
cmdline="${cmdline} amd_pstate=active"
cmdline="${cmdline} cpufreq.default_governor=performance"
cmdline="${cmdline} resume=${swapuuid} resume_offset=${swapoffs}"

efibootmgr \
    -c                      \
    -d "/dev/sda" -p 1      \
    -L "arch"               \
    -l "\vmlinuz-linux-zen" \
    -u "${cmdline}"

exit
reboot

# 10 > user
# 10.1 > yay
gcd1 https://aur.archlinux.org/yay.git
cd yay/

makepkg -sri

cd ../; rm -rf yay/

yay -Syu --noconfirm `cat /mss/repo/install/pkglist/user/{base,desk1}.txt`

# 10.2 > libvirt
virsh pool-destroy --pool default
virsh pool-undefine --pool default
virsh net-destroy --network default
virsh net-undefine --network default

xmldir="/mss/repo/virtxml"

for i in "${xmldir}"/net_*; do
    netname="$(echo ${i} | sed 's/^.*\/net_//;s/\.xml$//')"

    virsh net-define --file "${i}"
    virsh net-start --network "${netname}"
    virsh net-autostart --network "${netname}"
done

for i in "${xmldir}"/pool_*; do
    poolname="$(echo ${i} | sed 's/^.*\/pool_//;s/\.xml$//')"

    virsh pool-define --file "${i}"
    virsh pool-start --pool "${poolname}"
    virsh pool-refresh --pool "${poolname}"
    virsh pool-autostart --pool "${poolname}"
done

for i in "${xmldir}"/dom_*; do
    domname="$(echo ${i} | sed 's/^.*\/dom_//;s/\.xml$//')"

    virsh define --file "${i}"
done

# 10.3 > cleanup
sudo -i
pacman -Qtdq | pacman -Rns - --noconfirm
pacman -Scc --noconfirm

reboot
