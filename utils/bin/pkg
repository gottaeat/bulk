#!/mss/bin/sh
. /mss/files/funcs
. /mss/files/device.conf

repodir="/mss/repo"
localdb="/mss/files/packages.txt"

case "${amachine}" in
 t61|x230) repodb="${repodir}/pkg/packages-${amachine}.txt"     ;;
 *)        aprint_fail "${amachine} is not recognized."; exit 1 ;;
esac

if   [ ! -f "${localdb}" ]; then
 aprint_nc
 aprint_fail "(local) database file does not exist, exiting."
 aprint_nc
 exit 1
elif [ ! -f "${repodb}"  ]; then
 aprint_nc
 aprint_fail "(repo)  database file for ${amachine} does not exist, exiting."
 aprint_nc
 exit 1
fi

info(){
 if [ -z "${1}" ]
  then
   aprint_nc
   aprint_fail "specify the package name in \$1."
   aprint_nc
   exit 1
  else
   init="$(grep -w "${1}" "${localdb}")"
   if [ -z "${init}" ]
    then
     aprint_nc
     aprint_fail "package ${1} was not found in the local package database."
     aprint_nc
     exit 1
    else
     echo "${init}" \
       | awk '{sub(/^i/,"installed"); \
               sub(/^o/,"ondemand");  \
               print $1,"(r"$2"):",$4,$5}'
   fi
 fi
}

pver(){
 # tls
 if openssl version >/dev/null 2>&1
  then tls="$(openssl version | awk '{print tolower($1),$2}')"
  else tls="not found"
 fi

 # libc
 libc="$(ldd 2>&1 | awk 'FNR == 1 {a=$1; b=$2; d=$3}; \
                         FNR == 2 {c=$2}              \
                         END{print a,b,c,d}')"

 # host triplet
 trpl="$(cc -dumpmachine || gcc -dumpmachine || clang -dumpmachine)"
 if [ -z "${trpl}" ]; then trpl="cannot determine."; fi

 # clang
 if clang --version >/dev/null 2>&1
  then clangver="$(clang --version | awk 'FNR == 1 {print $1,$2,$4}')"
  else clangver="not found"
 fi

 aprint_nc
 lsdetail "host      " "${trpl}"
 lsdetail "libc      " "${libc}"
 lsdetail "ssl/crypto" "${tls}"
 lsdetail "cc        " "${clangver}"
 aprint_nc
}

stats(){
 gitdf_pre=$(diff -u "${localdb}" "${repodb}"                  \
             | awk '/^---/   {print "- local"" --->",$3"\t"$4};  \
                    /^\+\+\+/ {print "+ git"" ----->",$3"\t"$4}; \
                    /^\+[a-z,0-9]/;                              \
                    /^-[a-z,0-9]/')

 [ -z "${gitdf_pre}" ] \
  && gitdf="none" || gitdf="\n\n${gitdf_pre}"

 [ -z "$(cd /mss/repo && git status -s)" ] \
  && gitstat="clean" || gitstat="dirty"
 
    partsize="$(df -P / | awk 'NR==2 {print $3/1024"/"$2/1024"M"}')"
      c_inst="$(grep ^i "${localdb}" | wc -l)"
      c_ondm="$(grep ^o "${localdb}" | wc -l)"

 aprint_nc
 lsdetail "rootfs size   " "${partsize}"
 lsdetail "package count " "${c_inst} (+${c_ondm})"
 lsdetail "repo status   " "${gitstat}"
 lsdetail "local/git diff" "${gitdf}"
 aprint_nc
}

sync(){
 aprint_nc
 aprint_ret "(repo -> local) syncing packages database for ${amachine}."
  cp "${repodb}" "${localdb}"
 evalret
 aprint_nc
}

print_help(){
 aprint_nc
 aprint_usage "{info|pver|stats|sync}"
 aprint_nc
 exit 1
}

case "${1}" in
  info) info "${2}" ;;
  pver) pver        ;;
 stats) stats       ;;
  sync) sync        ;;
     *) print_help  ;;
esac
