#!/bin/bash
if [ ! "$(id -u)" -eq 0 ]; then
    echo "This program requires root privileges."
    exit 1
fi

if [ ! "${1}" ] || [ ! "${2}" ]; then
    echo "Usage: ${0} {iface} {post-up|pre-down}"
    exit 1
fi

priv_iface="shart_priv"
pub_iface="shart_pub"
wg_iface_list="$(wg show interfaces | sed 's/ /\n/g')"

iface_name="${1}"
iface_fwmark="$(wg show ${iface_name} fwmark | sed 's/^0x//')"
iface_allowed="$(wg show ${iface_name} allowed-ips | awk '{print $2}')"
iface_addr_nocidr="$(ip addr show ${iface_name} | awk '/inet/{sub(/\/[^.]*$/, ""); print $2}')"
iface_addr_dns="$(echo ${iface_addr_nocidr} | sed 's/\.[^.]*$//g').1"

case "${2}" in
    post-up)
        if [ ! "$(sysctl net.ipv4.conf.all.src_valid_mark | awk '{print $3}')" -eq 1 ]; then
            sysctl -q net.ipv4.conf.all.src_valid_mark=1
        fi

        if ! nft list table ip shart_net >/dev/null 2>&1; then
            nft 'add table ip shart_net'
            nft 'create chain ip shart_net preraw {type filter hook prerouting priority raw; policy accept;}'
            nft 'create chain ip shart_net premangle {type filter hook prerouting priority mangle; policy accept;}'
            nft 'create chain ip shart_net postmangle {type filter hook postrouting priority mangle; policy accept;}'
            nft 'add rule ip shart_net premangle meta l4proto udp meta mark set ct mark'
        fi

        case "${iface_name}" in
            "${priv_iface}")
                nft "add rule ip shart_net postmangle meta l4proto udp meta mark 0x0000${iface_fwmark} ct mark set meta mark comment \"${iface_name}RULE\""

                ip -4 route add "${iface_allowed}" dev "${iface_name}"
                ip -4 rule add pref "${iface_fwmark}" fwmark "0x${iface_fwmark}" table main
            ;;
            "${pub_iface}")
                nft "add rule ip shart_net preraw iifname != \"${iface_name}\" ip daddr ${iface_addr_nocidr} fib saddr type != local drop comment \"${iface_name}RULE\""
                nft "add rule ip shart_net postmangle meta l4proto udp meta mark 0x0000${iface_fwmark} ct mark set meta mark comment \"${iface_name}RULE\""

                ip -4 route add "${iface_allowed}" dev "${iface_name}" table "0x${iface_fwmark}"
                ip -4 rule add pref "$((${iface_fwmark}))" table main suppress_prefixlength 0
                ip -4 rule add pref "$((${iface_fwmark}+1))" not fwmark "0x${iface_fwmark}" table "0x${iface_fwmark}"

                mkdir -p "/tmp/bind/"
                echo "zone \".\" { type forward; forwarders { ${iface_addr_dns}; }; };" > "/tmp/bind/named.conf.local"
                rndc reload
            ;;
        esac
    ;;
    pre-down)
        if [ "$(echo "${wg_iface_list}" | grep -v ${iface_name} | wc -l)" -gt 0 ];
            then
                sysctl -q net.ipv4.conf.all.src_valid_mark=0
                nftstatus="here"
                chains="$(nft list table ip shart_net | awk '/^[[:space:]]chain/{print $2}')"
            else
                nft 'delete table ip shart_net' || true
                nftstatus="gone"
        fi

        case "${iface_name}" in
            "${priv_iface}")
                ip -4 rule del fwmark "0x${iface_fwmark}" table main

                if [ "${nftstatus}" = "here" ]; then
                    for i in ${chains}; do
                        rule_handles=`nft -a list chain ip shart_net preraw | grep "${iface_name}RULE" | awk '{print $NF}'`
                        if [ ! "$(echo "${rule_handles}" | wc -l)" -eq 0 ]; then
                            for rule in ${rule_handles}; do
                                nft "delete rule shart_net ${i} handle ${rule}"
                            done
                        fi
                    done
                fi
            ;;
            "${pub_iface}")
                ip -4 rule del table main suppress_prefixlength 0
                ip -4 rule del not fwmark "0x${iface_fwmark}" table "0x${iface_fwmark}"

                if [ "${nftstatus}" = "here" ]; then
                    for i in ${chains}; do
                        rule_handles=`nft -a list chain ip shart_net preraw | grep "${iface_name}RULE" | awk '{print $NF}'`
                        if [ ! "$(echo "${rule_handles}" | wc -l)" -eq 0 ]; then
                            for rule in ${rule_handles}; do
                                nft "delete rule shart_net ${i} handle ${rule}"
                            done
                        fi
                    done
                fi

                mkdir -p "/tmp/bind/"
                echo "zone \".\" { type hint; file \"/var/named/zone.root-nov6\"; };" > "/tmp/bind/named.conf.local"
                rndc reload
            ;;
        esac
    ;;
esac
